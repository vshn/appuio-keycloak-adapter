// Code generated by MockGen. DO NOT EDIT.
// Source: organization_controller.go

// Package controllers_test is a generated GoMock package.
package controllers_test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	keycloak "github.com/vshn/appuio-keycloak-adapter/keycloak"
)

// MockKeycloakClient is a mock of KeycloakClient interface.
type MockKeycloakClient struct {
	ctrl     *gomock.Controller
	recorder *MockKeycloakClientMockRecorder
}

// MockKeycloakClientMockRecorder is the mock recorder for MockKeycloakClient.
type MockKeycloakClientMockRecorder struct {
	mock *MockKeycloakClient
}

// NewMockKeycloakClient creates a new mock instance.
func NewMockKeycloakClient(ctrl *gomock.Controller) *MockKeycloakClient {
	mock := &MockKeycloakClient{ctrl: ctrl}
	mock.recorder = &MockKeycloakClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeycloakClient) EXPECT() *MockKeycloakClientMockRecorder {
	return m.recorder
}

// DeleteGroup mocks base method.
func (m *MockKeycloakClient) DeleteGroup(ctx context.Context, path ...string) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx}
	for _, a := range path {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteGroup", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteGroup indicates an expected call of DeleteGroup.
func (mr *MockKeycloakClientMockRecorder) DeleteGroup(ctx interface{}, path ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx}, path...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteGroup", reflect.TypeOf((*MockKeycloakClient)(nil).DeleteGroup), varargs...)
}

// ListGroups mocks base method.
func (m *MockKeycloakClient) ListGroups(ctx context.Context) ([]keycloak.Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGroups", ctx)
	ret0, _ := ret[0].([]keycloak.Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGroups indicates an expected call of ListGroups.
func (mr *MockKeycloakClientMockRecorder) ListGroups(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGroups", reflect.TypeOf((*MockKeycloakClient)(nil).ListGroups), ctx)
}

// PutGroup mocks base method.
func (m *MockKeycloakClient) PutGroup(ctx context.Context, group keycloak.Group) (keycloak.Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutGroup", ctx, group)
	ret0, _ := ret[0].(keycloak.Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutGroup indicates an expected call of PutGroup.
func (mr *MockKeycloakClientMockRecorder) PutGroup(ctx, group interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutGroup", reflect.TypeOf((*MockKeycloakClient)(nil).PutGroup), ctx, group)
}
